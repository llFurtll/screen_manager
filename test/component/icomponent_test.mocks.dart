// Mocks generated by Mockito 5.1.0 from annotations
// in compmanager/test/component/icomponent_test.dart.
// Do not manually edit this file.

import 'package:flutter/cupertino.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'icomponent_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeContainer_0 extends _i1.Fake implements _i2.Container {
  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [FakeComponent].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeComponent extends _i1.Mock implements _i3.FakeComponent {
  MockFakeComponent() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Future<void> loadDependencies() async => super.noSuchMethod(Invocation.method(#loadDependencies, []),
    returnValueForMissingStub: null);

  @override
  void init() => super.noSuchMethod(Invocation.method(#init, []),
      returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void bindings() => super.noSuchMethod(Invocation.method(#bindings, []),
      returnValueForMissingStub: null);
  @override
  _i2.Container constructor() =>
      (super.noSuchMethod(Invocation.method(#constructor, []),
          returnValue: _FakeContainer_0()) as _i2.Container);
  @override
  int beforeEvent() =>
      (super.noSuchMethod(Invocation.method(#beforeEvent, []), returnValue: 0)
          as int);
  @override
  int event() =>
      (super.noSuchMethod(Invocation.method(#event, []), returnValue: 0)
          as int);
  @override
  int afterEvent() =>
      (super.noSuchMethod(Invocation.method(#afterEvent, []), returnValue: 0)
          as int);
}
